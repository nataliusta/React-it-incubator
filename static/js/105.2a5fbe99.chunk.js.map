{"version":3,"file":"static/js/105.2a5fbe99.chunk.js","mappings":"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","sources":["webpack://react-app/./src/components/MainPage/MainPage.module.css?bbe1","webpack://react-app/./src/components/MainPage/ProfileInfo/ProfileInfo.module.css?bf0c","components/MainPage/ProfileInfo/ProfileStatusWithHooks.js","components/MainPage/ProfileInfo/ProfileInfo.js","webpack://react-app/./src/components/MainPage/Comments/Comments.module.css?0198","webpack://react-app/./src/components/MainPage/Comments/CommentItem/CommentItem.module.css?bc19","components/MainPage/Comments/CommentItem/CommentItem.js","components/MainPage/Comments/Comments.js","components/MainPage/Comments/CommentsContainer.js","components/MainPage/MainPage.js","components/MainPage/MainPageContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MainPage_text__UTfV-\",\"postItem\":\"MainPage_postItem__mrO3P\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__Nsb8-\",\"avatar\":\"ProfileInfo_avatar__8nSfo\"};","import React, {useEffect, useState} from 'react';\r\n//import classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'Enter something'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} \r\n                           autoFocus={true} \r\n                           onBlur={deactivateEditMode}\r\n                           value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} className={classes.avatar} alt='Avatar' />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo; ","// extracted by mini-css-extract-plugin\nexport default {\"commentsField\":\"Comments_commentsField__eDFtF\",\"commentsList\":\"Comments_commentsList__xsLGn\",\"item\":\"Comments_item__RrTFO\",\"comments\":\"Comments_comments__3a4Rh\",\"buttonComments\":\"Comments_buttonComments__8aPzI\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__7frYG\"};","import React from 'react';\r\nimport classes from './CommentItem.module.css';\r\n\r\nconst CommentItem = (props) => {\r\n    \r\n    return (\r\n        <li className={classes.item}>{props.comment}</li>\r\n    )\r\n}\r\n\r\nexport default CommentItem;","import React from 'react';\r\nimport classes from './Comments.module.css';\r\nimport CommentItem from './CommentItem/CommentItem.js';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport { Element } from '../../FormControls/FormControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Comments = React.memo(props => { // HOC f\r\n\r\n    let commentElements = props.commentsData.map ( comment => <CommentItem comment={comment.comment} key={comment.id} /> );\r\n\r\n    let AddNewComment = (values) => {\r\n      props.addComment(values.newCommentBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.mainComments}>\r\n            <div className={classes.comments}>\r\n                <ul className={classes.commentsList}>\r\n                    <div>{commentElements}</div>\r\n                </ul>\r\n            </div>\r\n            <AddCommentBodyFormRedux onSubmit={AddNewComment} />\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddCommentBodyForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.commentsField}>\r\n              <Field className={classes.text} component={Textarea} \r\n                    name='newCommentBody' placeholder={'Enter your comment'}\r\n                    validate = {[required, maxLength10]} />\r\n              <button className={classes.buttonComments}>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddCommentBodyFormRedux = reduxForm({form: 'profileAddCommentBodyForm'})(AddCommentBodyForm);\r\n\r\nexport default Comments;","//import React from 'react';\r\nimport Comments from './Comments';\r\nimport {addCommentCreator} from '../../../redux/comments-reducer';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => { // function that returns an object with datas from state\r\n    \r\n    return {\r\n        commentsData: state.comments.commentsData,\r\n        newCommentBody: state.mainPage.newCommentBody\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => { // contains an object with callbacks \r\n    return {\r\n        addComment: (newCommentBody) => {\r\n            dispatch(addCommentCreator(newCommentBody));\r\n        }\r\n    } \r\n}\r\n\r\nconst CommentsContainer = connect(mapStateToProps, mapDispatchToProps) (Comments);\r\n\r\nexport default CommentsContainer;","import React from 'react';\r\nimport classes from './MainPage.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.js';\r\nimport CommentsContainer from './Comments/CommentsContainer';\r\n\r\nconst MainPage = (props) => {\r\n\r\n    return (\r\n      <div className={classes.mainContent}>\r\n        <div className={classes.mainPicture}>\r\n          <img src='https://tdf-asia.com/wp-content/uploads/2021/01/in-store-display_TDF-visual-merchandising-manufacturer.jpg' alt='Chanel store' />\r\n        </div>\r\n        <div className={classes.post}>\r\n            <p className={classes.postItem}>“I don't understand how a woman can leave the house without fixing herself up a little - \r\n                if only out of politeness. And then, you never know, maybe that's the day she has a date with destiny. \r\n                And it's best to be as pretty as possible for destiny.”\r\n            </p>\r\n            <cite className={classes.author}>― Coco Chanel</cite>\r\n        </div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <CommentsContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport MainPage from './MainPage';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/main-reducer';\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nclass MainPageContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            /*if (!userId) {\r\n                this.props.history.push('/login');\r\n            }*/\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <MainPage {...this.props} \r\n                          profile={this.props.profile} \r\n                          status={this.props.status} \r\n                          updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.mainPage.profile,\r\n    status: state.mainPage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withRouter = (Component) => { // HOC\r\n\r\n    const ComponentWithRouterProp = (props) => { // Container component\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(MainPageContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","classes","src","photos","large","alt","Preloader","comment","maxLength10","maxLengthCreator","Comments","React","commentElements","commentsData","map","id","AddCommentBodyFormRedux","onSubmit","values","addComment","newCommentBody","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","connect","state","comments","mainPage","dispatch","addCommentCreator","MainPageContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}